{"version":3,"sources":["helper.js","components/PrizeBanner.js","components/StartButton.js","components/ControlBar.js","components/Wheel.js","components/StatTable.js","components/Simulator.js","components/ControlDrawer.js","App.js","reportWebVitals.js","index.js"],"names":["defaultSettings","title","key","chance","spinBefore","count","saveSettings","settings","localStorage","setItem","JSON","stringify","getSettings","getItem","parse","getSpinData","spinData","getInitialData","saveSpinData","prizes","reduce","obj","prize","wins","getPrize","saveData","filter","totalChance","sum","r","Math","random","find","undefined","push","VideoWrapper","styled","div","Prize","Header","h1","Title","p","PrizeBanner","props","onClick","rest","id","width","height","autoPlay","loop","preload","src","type","alt","text","image","ButtonBorder","Button","button","active","StartButton","children","BottomWrapper","GoldLine","GreyLine","HrWrapper","ActionsWrapper","ControlBar","spinned","Canvas","canvas","Wheel","segments","spinSettings","document","addEventListener","window","theWheel","Winwheel","numSegments","innerRadius","drawMode","wheelImage","pointerAngle","animation","duration","time","easing","spins","loadedImg","Image","onload","draw","columns","dataIndex","StatTable","stat","data","map","percent","left","pagination","hideOnSinglePage","dataSource","expandable","expandedRowRender","record","style","margin","join","rowExpandable","name","Simulator","useState","setCount","setStat","placement","gutter","span","layout","Item","label","value","onChange","step","min","Array","fill","forEach","idx","block","PrizesForms","initialValues","acc","Object","assign","marginBottom","ControlDrawer","prizesSettings","setSettings","isShowDrawer","setIsShowDrawer","Form","useForm","form","loginForm","isLoggedIn","setIsLoggedIn","resetConfig","newForm","setFieldsValue","message","success","resetStat","onClose","bodyStyle","paddingTop","footer","textAlign","overlay","danger","float","formData","getFieldsValue","marginRight","TabPane","tab","visible","marginTop","getFieldValue","resetFields","error","VersionWrapper","initialClickCount","version","App","setSpinned","setPrize","isShowSetting","setIsShowSetting","isShowVersion","setIsShowVersion","clickCount","setClickCount","showPrize","winMusic","Audio","play","playWinMusic","showSettings","onStart","winIdx","prizesIds","floor","length","calcPrize","stopAt","getRandomForSegment","getElementById","stopAngle","startAnimation","setTimeout","rotationAngle","stopAnimation","className","e","target","display","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"iTAAaA,G,cAAkB,CAC7B,CACEC,MAAO,sCACPC,IAAK,UACLC,OAAQ,MACRC,WAAY,EACZC,OAAQ,GASV,CAAEJ,MAAO,iCAASC,IAAK,OAAQC,OAAQ,MAAQC,WAAY,EAAGC,OAAQ,GACtE,CACEJ,MAAO,qCACPC,IAAK,UACLC,OAAQ,MACRC,WAAY,EACZC,OAAQ,GAEV,CACEJ,MAAO,SACPC,IAAK,SACLC,OAAQ,KACRC,WAAY,IACZC,MAAO,KAIEC,EAAe,SAACC,GAC3B,OAAOC,aAAaC,QAAQ,WAAYC,KAAKC,UAAUJ,KAG5CK,EAAc,WACzB,IAAML,EAAWC,aAAaK,QAAQ,YACtC,OAAKN,EAKEG,KAAKI,MAAMP,IAJhBC,aAAaC,QAAQ,WAAYC,KAAKC,UAAUX,IACzCA,IAMEe,EAAc,WACzB,IAAIC,EAAWR,aAAaK,QAAQ,YACpC,IAAKG,EAAU,CACb,IAAMT,EAAWK,IAGjB,OAFAI,EAAWC,EAAeV,GAC1BC,aAAaC,QAAQ,WAAYC,KAAKC,UAAUK,IACzCA,EAGT,OAAON,KAAKI,MAAME,IAGPE,EAAe,SAACF,GAC3B,OAAOR,aAAaC,QAAQ,WAAYC,KAAKC,UAAUK,KAG5CC,EAAiB,SAACV,GAC7B,MAAO,CACLF,MAAO,EACPc,OAAQZ,EAASa,QAAO,SAACC,EAAKC,GAK5B,OAJAD,EAAIC,EAAMpB,KAAO,CACfG,MAAO,EACPkB,KAAM,IAEDF,IACN,MAIMG,EAAW,SAACjB,EAAUS,GAA+B,IAArBS,IAAoB,yDACzDN,EAASZ,EAASmB,QACtB,SAACJ,GAAD,QACoB,IAAjBA,EAAMjB,OACLiB,EAAMjB,MAAQW,EAASG,OAAOG,EAAMpB,KAAtB,QAChBoB,EAAMlB,YAAcY,EAASX,SAG3BsB,EAAcR,EAAOC,QAAO,SAACQ,EAAKN,GAAN,OAAgBM,EAAMN,EAAMnB,SAAQ,GAEhE0B,EAAIC,KAAKC,SAAWJ,EAEtBxB,EAAS,EACPmB,EAAQH,EAAOa,MAAK,SAACV,GAEzB,OADAnB,GAAUmB,EAAMnB,OACT0B,EAAI1B,EAASmB,OAAQW,KAG9B,OAAKX,GAILN,EAASG,OAAOG,EAAMpB,KAAtB,QACAc,EAASG,OAAOG,EAAMpB,KAAtB,KAAmCgC,KAAKlB,EAASX,MAAQ,GACzDW,EAASX,QAELoB,GACFP,EAAaF,GAGRM,GAXE,M,8pCC5FX,IAAMa,EAAeC,IAAOC,IAAV,KA6BZC,EAAQF,IAAOC,IAAV,KAgBLE,EAASH,IAAOI,GAAV,KAGNC,EAAQL,IAAOM,EAAV,KAmCIC,EA5BK,SAACC,GAAW,IACtBtB,EAA4BsB,EAA5BtB,MAAOuB,EAAqBD,EAArBC,QAAYC,EADE,YACOF,EADP,qBAG7B,OACE,gDAASE,GAAT,cACE,cAACX,EAAD,UACE,uBACEY,GAAG,QACHC,MAAM,OACNC,OAAO,OACPC,SAAS,WACTC,KAAK,OACLC,QAAQ,OANV,SAQE,wBAAQC,IAAI,WAAWC,KAAK,kBAG/BhC,GACC,eAACgB,EAAD,CAAOO,QAASA,EAAhB,UACE,qBAAKU,IAAKjC,EAAMkC,KAAMH,IAAK/B,EAAMmC,QACjC,cAAClB,EAAD,6EACA,cAACE,EAAD,UAAQnB,EAAMkC,e,q+BC5ExB,IAAME,EAAetB,IAAOC,IAAV,KAcZsB,EAASvB,IAAOwB,OAAV,KAkBI,SAAChB,GAAD,OACZA,EAAMiB,OACF,6HACA,6IAoBOC,EARK,SAAClB,GACnB,OACE,cAACc,EAAD,CAAcb,QAASD,EAAMC,QAA7B,SACE,cAACc,EAAD,CAAQE,OAAQjB,EAAMiB,OAAtB,SAA+BjB,EAAMmB,c,u6CCjD3C,IAAMC,EAAgB5B,IAAOC,IAAV,KASb4B,EAAW7B,IAAOC,IAAV,KAaR6B,EAAW9B,IAAOC,IAAV,KAaR8B,EAAY/B,IAAOC,IAAV,KAkBT+B,GAXWhC,IAAOC,IAAV,KAWSD,IAAOC,IAAV,MA2BLgC,EApBI,SAACzB,GAAW,IACrBC,EAAqBD,EAArBC,QAASyB,EAAY1B,EAAZ0B,QAEjB,OACE,eAACN,EAAD,WAEE,eAACG,EAAD,WACE,cAACF,EAAD,IACA,cAACC,EAAD,IACA,cAACD,EAAD,OAEF,cAACG,EAAD,UACE,cAAC,EAAD,CAAaP,OAAQS,EAASzB,QAASA,EAAvC,yB,kMCzER,IAAM0B,EAASnC,IAAOoC,OAAV,KAqDGC,EA5CD,SAAC7B,GAAW,IAChB8B,EAA2B9B,EAA3B8B,SAAUC,EAAiB/B,EAAjB+B,aAoClB,OAlCAC,SAASC,iBAAiB,oBAAoB,WAC5CC,OAAOC,SAAW,IAAID,OAAOE,SAAS,CACpCC,YAAa,EACbC,YAAa,GACbC,SAAU,QACVC,WAAY,YAEZV,SAAUA,EACVW,aAAc,IAMdC,UAAW,CACThC,KAAM,aACNiC,SAAUZ,EAAaa,KACvBC,OAAQ,mBACRC,MAAOf,EAAatE,SAIxB,IAAIsF,EAAY,IAAIC,MAGpBD,EAAUE,OAAS,WACjBf,OAAOC,SAASK,WAAaO,EAC7Bb,OAAOC,SAASe,QAIlBH,EAAUtC,IAAM,cAIhB,eAACkB,EAAD,CAAQxB,GAAG,SAASC,MAAM,MAAMC,OAAO,MAAvC,uDAC6C,Q,iIChD3C8C,GAAU,CACd,CAAE9F,MAAO,2BAAQ+F,UAAW,QAAS9F,IAAK,SAC1C,CAAED,MAAO,uCAAU+F,UAAW,QAAS9F,IAAK,SAC5C,CAAED,MAAO,oGAAqB+F,UAAW,UAAW9F,IAAK,WACzD,CAAED,MAAO,8CAAY+F,UAAW,OAAQ9F,IAAK,SAmChC+F,GAhCG,SAACrD,GAAW,IACpBsD,EAAmBtD,EAAnBsD,KAAM3F,EAAaqC,EAAbrC,SAER4F,EAAOD,EACT3F,EAAS6F,KAAI,SAAC9E,GACZ,IAAMjB,EAAQ6F,EAAK/E,OAAOG,EAAMpB,KAAKG,MACrC,MAAO,CACLH,IAAKoB,EAAMpB,IACXD,MAAOqB,EAAMrB,MACbI,MAAOA,EACPgG,QAAkB,IAARhG,EAAe6F,EAAK7F,MAC9BiG,MAAuB,IAAjBhF,EAAMjB,MAAe,IAAMiB,EAAMjB,MAAQA,EAC/CkB,KAAM2E,EAAK/E,OAAOG,EAAMpB,KAAKqB,SAGjC,GAEJ,OACE,cAAC,KAAD,CACEgF,WAAY,CAAEC,kBAAkB,GAChCC,WAAYN,EACZJ,QAASA,GACTW,WAAY,CACVC,kBAAmB,SAACC,GAAD,OACjB,mBAAGC,MAAO,CAAEC,OAAQ,GAApB,SAA0BF,EAAOrF,KAAKwF,KAAK,QAE7CC,cAAe,SAACJ,GAAD,MAA4B,mBAAhBA,EAAOK,UCiB3BC,GA/CG,SAACtE,GAAW,IACpBrC,EAAsBqC,EAAtBrC,SAAauC,EADM,YACGF,EADH,gBAGDuE,mBAAS,KAHR,mBAGpB9G,EAHoB,KAGb+G,EAHa,OAIHD,mBAAS,MAJN,mBAIpBjB,EAJoB,KAIdmB,EAJc,KAc3B,OACE,eAAC,KAAD,yBAAQC,UAAU,SAASrE,OAAO,OAAOhD,MAAM,0DAAgB6C,GAA/D,cACE,cAAC,IAAD,CAAKyE,OAAQ,GAAb,SACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,cAAC,IAAD,CAAMC,OAAO,WAAb,SACE,cAAC,IAAKC,KAAN,CAAWC,MAAM,iHAAjB,SACE,cAAC,IAAD,CACEd,MAAO,CAAE7D,MAAO,QAChB4E,MAAOvH,EACPwH,SAAUT,EACVU,KAAM,IACNC,IAAK,YAMf,cAAC,IAAD,CAAKR,OAAQ,GAAb,SACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,cAAC,KAAD,CAAQ3E,QA3BQ,WACtB,IAAMqD,EAAOjF,EAAeV,GAC5B,IAAIyH,MAAM3H,GAAO4H,KAAK,GAAGC,SAAQ,SAACN,EAAOO,GACvC3G,EAASjB,EAAU2F,GAAM,MAE3BmB,EAAQnB,IAsBgCkC,OAAK,EAAvC,0FAKJ,cAAC,IAAD,CAAKb,OAAQ,GAAb,SACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,cAAC,GAAD,CAAWtB,KAAMA,EAAM3F,SAAUA,aClBrC8H,GAAc,SAACzF,GAAW,IACtBrC,EAAaqC,EAAbrC,SACF+H,EAAgB/H,EAASa,QAAO,SAACmH,EAAKjH,GAAW,IAAD,EACpD,OAAOkH,OAAOC,OAAO,GAAIF,GAAlB,KAAAC,OAAA,IAAAA,CAAA,EACJlH,EAAMpB,IAAM,UAAYoB,EAAMnB,QAD1BqI,OAAA,IAAAA,CAAA,EAEJlH,EAAMpB,IAAM,eAAiBoB,EAAMlB,YAF/BoI,OAAA,IAAAA,CAAA,EAGJlH,EAAMpB,IAAM,SAAWoB,EAAMjB,OAHzB,MAKN,IAEH,OACE,cAAC,IAAD,yBAAMoH,OAAO,WAAWa,cAAeA,GAAmB1F,GAA1D,aACGrC,EAAS6F,KAAI,SAAC9E,GAAD,OACZ,cAAC,IAAD,CAEEuF,MAAO,CAAE6B,aAAc,QACvBpF,KAAK,QACLrD,MAAOqB,EAAMrB,MAJf,SAME,eAAC,IAAD,CAAKsH,OAAQ,GAAb,UACE,cAAC,IAAD,CAAKC,KAAM,EAAX,SACE,cAAC,IAAKE,KAAN,CAAWC,MAAM,mFAAkBV,KAAM3F,EAAMpB,IAAM,UAArD,SACE,cAAC,IAAD,CAAa4H,KAAM,KAAOC,IAAK,QAGnC,cAAC,IAAD,CAAKP,KAAM,EAAX,SACE,cAAC,IAAKE,KAAN,CACEC,MAAM,+EACNV,KAAM3F,EAAMpB,IAAM,eAFpB,SAIE,cAAC,IAAD,CAAa4H,KAAM,IAAKC,IAAK,QAGjC,cAAC,IAAD,CAAKP,KAAM,EAAX,SACE,cAAC,IAAKE,KAAN,CAAWC,MAAM,qGAAqBV,KAAM3F,EAAMpB,IAAM,SAAxD,SACE,cAAC,IAAD,CAAa6H,KAAM,YArBpBzG,EAAMpB,YAsLNyI,GAvJO,SAAC/F,GACrB,IAAMgG,EAAiBhI,IADQ,EAGCuG,mBAASyB,GAHV,mBAGxBrI,EAHwB,KAGdsI,EAHc,OAIS1B,oBAAS,GAJlB,mBAIxB2B,EAJwB,KAIVC,EAJU,OAKhBC,IAAKC,UAAbC,EALwB,sBAMXF,IAAKC,UAAlBE,EANwB,sBAOPhC,mBAASpG,KAPF,mBAOxBmF,EAPwB,KAOlBmB,EAPkB,OAQKF,oBAAS,GARd,mBAQxBiC,EARwB,KAQZC,EARY,KAyCzBC,EAAc,WAClBT,EAAY7I,GACZM,EAAaN,GACb,IAAMuJ,EAAUvJ,EAAgBoB,QAAO,SAACmH,EAAKjH,GAAW,IAAD,EACrD,OAAOkH,OAAOC,OAAO,GAAIF,GAAlB,KAAAC,OAAA,IAAAA,CAAA,EACJlH,EAAMpB,IAAM,UAAYoB,EAAMnB,QAD1BqI,OAAA,IAAAA,CAAA,EAEJlH,EAAMpB,IAAM,eAAiBoB,EAAMlB,YAF/BoI,OAAA,IAAAA,CAAA,EAGJlH,EAAMpB,IAAM,SAAWoB,EAAMjB,OAHzB,MAKN,IACH6I,EAAKM,eAAeD,GACpBE,KAAQC,QAAQ,8HAGZC,EAAY,WAChB,IAAMzD,EAAOjF,EAAeV,GAC5BW,EAAagF,GACbmB,EAAQnB,GACRuD,KAAQC,QAAQ,kHAyBlB,OACE,cAAC,KAAD,2BACM9G,GADN,IAEEgH,QAfY,WACdP,GAAc,GACdzG,EAAMgH,WAcJ3G,OAAO,OACPhD,MAAM,oGACN4J,UAAW,CAAEC,WAAY,OACzBxC,UAAU,SACVyC,OACEX,GACE,sBACEvC,MAAO,CACLmD,UAAW,SAFf,UAKE,cAAC,KAAD,CAAUC,QAtBF,kBAChB,eAAC,KAAD,WACE,cAAC,KAAKvC,KAAN,CAAW7E,QAAS8G,EAApB,2HACA,cAAC,KAAKjC,KAAN,CAAW7E,QAASyG,EAApB,2IAmBM,SACE,cAAC,KAAD,CAAQY,QAAM,EAACrD,MAAO,CAAEsD,MAAO,QAA/B,gEAIF,cAAC,KAAD,CAAQtH,QA5FH,WACb,IAAMuH,EAAWlB,EAAKmB,iBAChB9J,EAAWqI,EAAexC,KAAI,SAAC9E,GACnC,OAAO,2BACFA,GADL,IAEEnB,OAAQiK,EAAS9I,EAAMpB,IAAM,YAAc,GAC3CE,WAAYgK,EAAS9I,EAAMpB,IAAM,iBAAmB,EACpDG,MAAO+J,EAAS9I,EAAMpB,IAAM,WAAa,OAG7C2I,EAAYtI,GACZwI,GAAgB,IAiFiBlC,MAAO,CAAEyD,YAAa,GAA/C,sFAGA,cAAC,KAAD,CAAQzH,QAjFH,WACb,IAAMuH,EAAWlB,EAAKmB,iBAChB9J,EAAWqI,EAAexC,KAAI,SAAC9E,GACnC,OAAO,2BACFA,GADL,IAEEnB,OAAQiK,EAAS9I,EAAMpB,IAAM,YAAc,GAC3CE,WAAYgK,EAAS9I,EAAMpB,IAAM,iBAAmB,EACpDG,MAAO+J,EAAS9I,EAAMpB,IAAM,WAAa,OAG7C2I,EAAYtI,GACZD,EAAaC,GACbkJ,KAAQC,QAAQ,oIAqEiBpG,KAAK,UAA9B,uEAtBR,SA6BG8F,EACC,eAAC,KAAD,WACE,eAAC,KAAKmB,QAAN,CAAcC,IAAI,yDAAlB,UACE,cAAC,GAAD,CAAajK,SAAUA,EAAU2I,KAAMA,IACvC,cAAC,GAAD,CACEuB,QAAS3B,EACTvI,SAAUA,EACVqJ,QA/GO,kBAAMb,GAAgB,QA0GC,YAQlC,eAAC,KAAKwB,QAAN,CAAcC,IAAI,+DAAlB,UACE,+KAA+BtE,EAAK7F,SACpC,cAAC,GAAD,CAAWE,SAAUA,EAAU2F,KAAMA,MAFJ,WAMrC,eAAC,IAAD,CAAMuB,OAAO,WAAWyB,KAAMC,EAA9B,UACE,cAAC,IAAD,CAAKtC,MAAO,CAAE6D,UAAW,QAAUnD,OAAQ,GAA3C,SACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,cAAC,IAAKE,KAAN,CAAWC,MAAM,uCAASV,KAAK,WAA/B,SACE,cAAC,KAAD,CAAO3D,KAAK,mBAIlB,cAAC,IAAD,CAAKiE,OAAQ,GAAb,SACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,cAAC,KAAD,CAAQY,OAAK,EAACvF,QA9EP,WAEA,kBADAsG,EAAUwB,cAAc,aAEvCxB,EAAUyB,cACVvB,GAAc,IAEdI,KAAQoB,MAAM,kHAwE6BvH,KAAK,UAAxC,uD,oJCzMd,IAAMwH,GAAiB1I,IAAOC,IAAV,MAOdsC,GAAe,CACnBa,KAAM,EACNnF,MAAO,GAGHc,GAAS,CACb,CAAEsC,MAAO,mBAAoBD,KAAM,iCAAStD,IAAK,QACjD,CAAEuD,MAAO,mBAAoBD,KAAM,sCAActD,IAAK,WACtD,CAAEuD,MAAO,qBAAsBD,KAAM,qCAAatD,IAAK,WACvD,CAAEuD,MAAO,mBAAoBD,KAAM,sCAActD,IAAK,WACtD,CAAEuD,MAAO,mBAAoBD,KAAM,iCAAStD,IAAK,QACjD,CAAEuD,MAAO,mBAAoBD,KAAM,sCAActD,IAAK,WACtD,CAAEuD,MAAO,qBAAsBD,KAAM,YAAatD,IAAK,UACvD,CAAEuD,MAAO,mBAAoBD,KAAM,sCAActD,IAAK,YAsBlD6K,GAAoB,CACxBxK,SAAU,EACVyK,QAAS,GA+FIC,OA5Ef,WAAgB,IAAD,EACiB9D,oBAAS,GAD1B,mBACN7C,EADM,KACG4G,EADH,OAEa/D,mBAAS,MAFtB,mBAEN7F,EAFM,KAEC6J,EAFD,OAG6BhE,oBAAS,GAHtC,mBAGNiE,EAHM,KAGSC,EAHT,OAI6BlE,oBAAS,GAJtC,mBAINmE,EAJM,KAISC,EAJT,OAKuBpE,mBAClCqB,OAAOC,OAAO,GAAIsC,KANP,mBAKNS,EALM,KAKMC,EALN,KASPC,EAAY,SAACpK,GACjB6J,EAAS7J,GACLA,GA3Ba,SAACpB,GACpB,IAAIyL,EACJ,OAAQzL,GACN,IAAK,SACHyL,EAAW,IAAIC,MAAM,kBACrB,MACF,IAAK,UACHD,EAAW,IAAIC,MAAM,mBACrB,MACF,QACED,EAAW,IAAIC,MAAM,WAGzBD,EAASE,OAcIC,CAAaxK,EAAMpB,MAyB1B6L,EAAe,kBAAMV,GAAiB,IAItCW,EAAU,WACG,IAAIJ,MAAM,aAChBC,OACXX,GAAW,GACX,IAAMe,EApFQ,WAChB,IAAM1L,EAAWK,IACXI,EAAWD,IACXO,EAAQE,EAASjB,EAAUS,GAE3BkL,EAAY5K,EACdH,GAAOC,QAAO,SAACmH,EAAD,EAAeJ,GAI3B,OAJmC,EAAfjI,MACRoB,EAAMpB,KAChBqI,EAAIrG,KAAKiG,GAEJI,IACN,IACH,EAIJ,OAAO2D,EAFWpK,KAAKqK,MAAMrK,KAAKC,SAAWmK,EAAUE,SAsEtCC,GACXC,EAASxH,OAAOC,SAASwH,oBAAoBN,EAAS,GAC1DrH,SAAS4H,eAAe,SAASX,OAGjC/G,OAAOC,SAASO,UAAUmH,UAAYH,EACtB,IAAIV,MAAM,YAChBC,OACV/G,OAAOC,SAAS2H,iBAChBC,YAAW,WACT7H,OAAOC,SAAS6H,cAAgB9H,OAAOC,SAAS6H,cAAgB,IAChE9H,OAAOC,SAAS8H,gBAChB3B,GAAW,GACXQ,EAAUvK,GAAO8K,MACI,IAApBtH,GAAaa,OAGlB,OACE,sBAAKsH,UAAU,MAAMjK,QAhDP,SAACkK,GACK,WAAhBA,EAAEC,OAAOjK,GACX0I,EACEjD,OAAOC,OAAO+C,EAAY,CACxBR,QAASQ,EAAWR,QAAU,EAC9BzK,SAAUiL,EAAWjL,SAAW,KAIpCkL,EAAcjD,OAAOC,OAAO,GAAIsC,KAG9BS,EAAWjL,UAAY,IACzBwL,IACAN,EAAcjD,OAAOC,OAAO+C,EAAY,CAAEjL,SAAU,MAC3CiL,EAAWR,SAAW,IAC/BO,GAAiB,GACjBE,EAAcjD,OAAOC,OAAO+C,EAAY,CAAER,QAAS,KACnD2B,YAAW,kBAAMpB,GAAiB,KAAQ,OA8B5C,UACGD,GAAiB,eAACR,GAAD,eAAkBE,QACpC,cAAC,EAAD,CAAOtG,SAAUvD,GAAQwD,aAAcA,KACvC,cAAC,EAAD,CAAYL,QAASA,EAASzB,QAAS,kBAAOyB,GAAW0H,OACzD,cAAC,EAAD,CACEnJ,QA7BW,kBAAMsI,EAAS,OA8B1B7J,MAAOA,EACPuF,MAAO,CAAEoG,QAAS3L,EAAQ,QAAU,UAErC8J,GAAiB,cAAC,GAAD,CAAeX,SAAO,EAACb,QApCxB,kBAAMyB,GAAiB,UCjG/B6B,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OAAO,cAAC,GAAD,IAAShJ,SAAS4H,eAAe,SAKjDU,O","file":"static/js/main.c022e68c.chunk.js","sourcesContent":["export const defaultSettings = [\n  {\n    title: \"Пиво 0,5л.\",\n    key: \"beer-05\",\n    chance: 0.9523,\n    spinBefore: 0,\n    count: -1,\n  },\n  // {\n  //   title: \"Пиво 1л.\",\n  //   key: \"beer-1\",\n  //   chance: 0.4523,\n  //   spinBefore: 0,\n  //   count: -1,\n  // },\n  { title: \"Чипсы\", key: \"lays\", chance: 0.0333, spinBefore: 0, count: -1 },\n  {\n    title: \"Пиво 10л.\",\n    key: \"beer-10\",\n    chance: 0.0142,\n    spinBefore: 0,\n    count: -1,\n  },\n  {\n    title: \"iPhone\",\n    key: \"iphone\",\n    chance: 0.0002,\n    spinBefore: 1000,\n    count: 1,\n  },\n];\n\nexport const saveSettings = (settings) => {\n  return localStorage.setItem(\"settings\", JSON.stringify(settings));\n};\n\nexport const getSettings = () => {\n  const settings = localStorage.getItem(\"settings\");\n  if (!settings) {\n    localStorage.setItem(\"settings\", JSON.stringify(defaultSettings));\n    return defaultSettings;\n  }\n\n  return JSON.parse(settings);\n};\n\nexport const getSpinData = () => {\n  let spinData = localStorage.getItem(\"spinData\");\n  if (!spinData) {\n    const settings = getSettings();\n    spinData = getInitialData(settings);\n    localStorage.setItem(\"spinData\", JSON.stringify(spinData));\n    return spinData;\n  }\n\n  return JSON.parse(spinData);\n};\n\nexport const saveSpinData = (spinData) => {\n  return localStorage.setItem(\"spinData\", JSON.stringify(spinData));\n};\n\nexport const getInitialData = (settings) => {\n  return {\n    count: 0,\n    prizes: settings.reduce((obj, prize) => {\n      obj[prize.key] = {\n        count: 0,\n        wins: [],\n      };\n      return obj;\n    }, {}),\n  };\n};\n\nexport const getPrize = (settings, spinData, saveData = true) => {\n  const prizes = settings.filter(\n    (prize) =>\n      (prize.count === -1 ||\n        prize.count > spinData.prizes[prize.key][\"count\"]) &&\n      prize.spinBefore <= spinData.count\n  );\n\n  const totalChance = prizes.reduce((sum, prize) => sum + prize.chance, 0);\n\n  const r = Math.random() * totalChance;\n\n  let chance = 0;\n  const prize = prizes.find((prize) => {\n    chance += prize.chance;\n    return r < chance ? prize : undefined;\n  });\n\n  if (!prize) {\n    return null;\n  }\n\n  spinData.prizes[prize.key][\"count\"]++;\n  spinData.prizes[prize.key][\"wins\"].push(spinData.count + 1);\n  spinData.count++;\n\n  if (saveData) {\n    saveSpinData(spinData);\n  }\n\n  return prize;\n};\n","import styled from \"styled-components\";\n\nconst VideoWrapper = styled.div`\n  opacity: 0.7;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  overflow: hidden;\n  z-index: 1;\n  /* background: url(bg/daisy-stock-poster.jpg) no-repeat #94a233; */\n  background-size: cover;\n  > video {\n    position: absolute;\n    top: 0;\n    left: 0;\n    min-width: 100%;\n    min-height: 100%;\n    width: auto;\n    height: auto;\n  }\n\n  > video {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\nconst Prize = styled.div`\n  z-index: 10;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  padding: 40px;\n  border-radius: 40px;\n  padding: 60px;\n  border: 10px solid #ffd27b;\n  background: #000000;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst Header = styled.h1`\n  color: #fff;\n`;\nconst Title = styled.p`\n  color: #ffd27b;\n  margin: 0;\n  font-size: 42px;\n  font-weight: 700;\n`;\n\nconst PrizeBanner = (props) => {\n  const { prize, onClick, ...rest } = props;\n\n  return (\n    <div {...rest}>\n      <VideoWrapper>\n        <video\n          id=\"video\"\n          width=\"100%\"\n          height=\"auto\"\n          autoPlay=\"autoplay\"\n          loop=\"loop\"\n          preload=\"auto\"\n        >\n          <source src=\"back.mp4\" type=\"video/mp4\"></source>\n        </video>\n      </VideoWrapper>\n      {prize && (\n        <Prize onClick={onClick}>\n          <img alt={prize.text} src={prize.image} />\n          <Header>Вы выиграли:</Header>\n          <Title>{prize.text}</Title>\n        </Prize>\n      )}\n    </div>\n  );\n};\n\nexport default PrizeBanner;\n","import styled from \"styled-components\";\n\nconst ButtonBorder = styled.div`\n  cursor: pointer;\n  display: flex;\n  user-select: none;\n  background: radial-gradient(\n    50% 50% at 50% 50%,\n    #6b6b6b 0%,\n    #dbdbdb 90.62%,\n    #7d7d7d 100%\n  );\n  width: 180px;\n  height: 180px;\n  border-radius: 50%;\n`;\nconst Button = styled.button`\n  cursor: pointer;\n  user-select: none;\n  display: flex;\n  align-items: center;\n  font-family: \"DigitalICG\";\n  text-transform: uppercase;\n  justify-content: center;\n  color: red;\n  outline: none;\n  border: none;\n  width: calc(100% - 24px);\n  height: calc(100% - 24px);\n  border-radius: 50%;\n  margin: 12px;\n  font-size: 48px;\n  display: flex;\n  position: relative;\n  background: ${(props) =>\n    props.active\n      ? \"radial-gradient( 50% 50% at 50% 50%,rgb(222 90 90 / 88%) 0%,rgb(230 0 0 / 28%) 100%),linear-gradient(0deg,#000000,#000000)\"\n      : \"radial-gradient( 50% 50% at 50% 50%, rgba(153, 153, 153, 0.5) 0%, rgba(255, 255, 255, 0) 100%), linear-gradient(0deg, #000000, #000000)\"};\n\n  :active {\n    background: radial-gradient(\n        70% 70% at 50% 50%,\n        rgba(153, 153, 153, 0.5) 0%,\n        rgba(255, 255, 255, 0) 100%\n      ),\n      linear-gradient(0deg, #000000, #000000);\n  }\n`;\n\nconst StartButton = (props) => {\n  return (\n    <ButtonBorder onClick={props.onClick}>\n      <Button active={props.active}>{props.children}</Button>\n    </ButtonBorder>\n  );\n};\n\nexport default StartButton;\n","import styled from \"styled-components\";\nimport StartButton from \"./StartButton\";\n\nconst BottomWrapper = styled.div`\n  min-height: 40vh;\n  flex-grow: 1;\n  width: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst GoldLine = styled.div`\n  width: 100%;\n  height: 12px;\n  display: block;\n  box-sizing: content-box;\n  background: linear-gradient(180deg, #b58304 0%, #ffd27b 100%);\n  :first-child {\n    border-top: 10px solid #1d1d1d;\n  }\n  :last-child {\n    border-bottom: 10px solid #1d1d1d;\n  }\n`;\nconst GreyLine = styled.div`\n  width: 100%;\n  height: 100%;\n  max-height: 100px;\n  display: block;\n  background: linear-gradient(\n    270deg,\n    #000000 0%,\n    rgba(69, 69, 69, 0.6) 25%,\n    rgba(73, 73, 73, 0.63) 75%,\n    #000000 100%\n  );\n`;\nconst HrWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  max-height: 144px;\n  flex: 1 1 0px;\n`;\nconst Triangle = styled.div`\n  /* background: green; */\n  position: absolute;\n  left: 50%;\n  bottom: 100%;\n  transform: translateX(-50%);\n  width: 104px;\n  height: 80px;\n  background: url(\"/pointer.png\") no-repeat;\n`;\n\nconst ActionsWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-grow: 1;\n`;\n\nconst ControlBar = (props) => {\n  const { onClick, spinned } = props;\n\n  return (\n    <BottomWrapper>\n      {/* <Triangle id=\"triangle\" /> */}\n      <HrWrapper>\n        <GoldLine />\n        <GreyLine />\n        <GoldLine />\n      </HrWrapper>\n      <ActionsWrapper>\n        <StartButton active={spinned} onClick={onClick}>\n          Start\n        </StartButton>\n      </ActionsWrapper>\n    </BottomWrapper>\n  );\n};\n\nexport default ControlBar;\n","import styled from \"styled-components\";\n\nconst Canvas = styled.canvas`\n  width: 60vh;\n  max-width: 100vw;\n  max-height: 100vw;\n  flex-shrink: 0;\n  padding: 20px;\n  box-sizing: border-box;\n`;\n\nconst Wheel = (props) => {\n  const { segments, spinSettings } = props;\n\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    window.theWheel = new window.Winwheel({\n      numSegments: 8,\n      innerRadius: 75,\n      drawMode: \"image\",\n      wheelImage: \"wheel.png\",\n      // responsive: true,\n      segments: segments,\n      pointerAngle: 180,\n      // pointerGuide: {\n      //   display: true,\n      //   strokeStyle: \"red\",\n      //   lineWidth: 3,\n      // },\n      animation: {\n        type: \"spinToStop\", // Type of animation.\n        duration: spinSettings.time, // How long the animation is to take in seconds.\n        easing: \"Power2.easeInOut\",\n        spins: spinSettings.count, // The number of complete 360 degree rotations the wheel is to do.\n      },\n    });\n\n    let loadedImg = new Image();\n\n    // Create callback to execute once the image has finished loading.\n    loadedImg.onload = function () {\n      window.theWheel.wheelImage = loadedImg; // Make wheelImage equal the loaded image object.\n      window.theWheel.draw(); // Also call draw function to render the wheel.\n    };\n\n    // Set the image source, once complete this will trigger the onLoad callback (above).\n    loadedImg.src = \"spin.png\";\n  });\n\n  return (\n    <Canvas id=\"canvas\" width=\"612\" height=\"612\">\n      Canvas not supported, use another browser.{\" \"}\n    </Canvas>\n  );\n};\n\nexport default Wheel;\n","import { Table } from \"antd\";\n\nconst columns = [\n  { title: \"Приз\", dataIndex: \"title\", key: \"title\" },\n  { title: \"Выпало\", dataIndex: \"count\", key: \"count\" },\n  { title: \"Процент выпадения\", dataIndex: \"percent\", key: \"percent\" },\n  { title: \"Осталоcь\", dataIndex: \"left\", key: \"left\" },\n];\n\nconst StatTable = (props) => {\n  const { stat, settings } = props;\n\n  const data = stat\n    ? settings.map((prize) => {\n        const count = stat.prizes[prize.key].count;\n        return {\n          key: prize.key,\n          title: prize.title,\n          count: count,\n          percent: (count * 100) / stat.count,\n          left: prize.count === -1 ? \"-\" : prize.count - count,\n          wins: stat.prizes[prize.key].wins,\n        };\n      })\n    : [];\n\n  return (\n    <Table\n      pagination={{ hideOnSinglePage: true }}\n      dataSource={data}\n      columns={columns}\n      expandable={{\n        expandedRowRender: (record) => (\n          <p style={{ margin: 0 }}>{record.wins.join(\",\")}</p>\n        ),\n        rowExpandable: (record) => record.name !== \"Not Expandable\",\n      }}\n    />\n  );\n};\n\nexport default StatTable;\n","import { Button, Col, Drawer, Form, InputNumber, Row } from \"antd\";\nimport { useState } from \"react\";\nimport { getInitialData, getPrize } from \"../helper\";\nimport StatTable from \"./StatTable\";\n\nconst Simulator = (props) => {\n  const { settings, ...rest } = props;\n\n  const [count, setCount] = useState(1000);\n  const [stat, setStat] = useState(null);\n\n  const startSimulation = () => {\n    const stat = getInitialData(settings);\n    new Array(count).fill(1).forEach((value, idx) => {\n      getPrize(settings, stat, false);\n    });\n    setStat(stat);\n  };\n\n  return (\n    <Drawer placement=\"bottom\" height=\"100%\" title=\"Симуляция\" {...rest}>\n      <Row gutter={24}>\n        <Col span={24}>\n          <Form layout=\"vertical\">\n            <Form.Item label=\"Количество вращений:\">\n              <InputNumber\n                style={{ width: \"100%\" }}\n                value={count}\n                onChange={setCount}\n                step={1000}\n                min={1}\n              />\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n      <Row gutter={24}>\n        <Col span={24}>\n          <Button onClick={startSimulation} block>\n            Симулировать\n          </Button>\n        </Col>\n      </Row>\n      <Row gutter={24}>\n        <Col span={24}>\n          <StatTable stat={stat} settings={settings} />\n        </Col>\n      </Row>\n    </Drawer>\n  );\n};\n\nexport default Simulator;\n","import React, { useState } from \"react\";\n\nimport {\n  Drawer,\n  Tabs,\n  Row,\n  Form,\n  Col,\n  Card,\n  InputNumber,\n  Button,\n  Menu,\n  Dropdown,\n  message,\n  Input,\n} from \"antd\";\nimport Similator from \"./Simulator\";\nimport {\n  getSettings,\n  getSpinData,\n  saveSettings,\n  defaultSettings,\n  getInitialData,\n  saveSpinData,\n} from \"../helper\";\nimport StatTable from \"./StatTable\";\n\nconst PrizesForms = (props) => {\n  const { settings } = props;\n  const initialValues = settings.reduce((acc, prize) => {\n    return Object.assign({}, acc, {\n      [prize.key + \"-chance\"]: prize.chance,\n      [prize.key + \"-spin-before\"]: prize.spinBefore,\n      [prize.key + \"-count\"]: prize.count,\n    });\n  }, {});\n\n  return (\n    <Form layout=\"vertical\" initialValues={initialValues} {...props}>\n      {settings.map((prize) => (\n        <Card\n          key={prize.key}\n          style={{ marginBottom: \"20px\" }}\n          type=\"inner\"\n          title={prize.title}\n        >\n          <Row gutter={12}>\n            <Col span={8}>\n              <Form.Item label=\"Доля выпадения:\" name={prize.key + \"-chance\"}>\n                <InputNumber step={0.001} min={0} />\n              </Form.Item>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                label=\"После X попыток:\"\n                name={prize.key + \"-spin-before\"}\n              >\n                <InputNumber step={100} min={0} />\n              </Form.Item>\n            </Col>\n            <Col span={8}>\n              <Form.Item label=\"Количество призов:\" name={prize.key + \"-count\"}>\n                <InputNumber min={-1} />\n              </Form.Item>\n            </Col>\n          </Row>\n        </Card>\n      ))}\n    </Form>\n  );\n};\n\nconst ControlDrawer = (props) => {\n  const prizesSettings = getSettings();\n\n  const [settings, setSettings] = useState(prizesSettings);\n  const [isShowDrawer, setIsShowDrawer] = useState(false);\n  const [form] = Form.useForm();\n  const [loginForm] = Form.useForm();\n  const [stat, setStat] = useState(getSpinData());\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const hideDrawer = () => setIsShowDrawer(false);\n\n  const onTest = () => {\n    const formData = form.getFieldsValue();\n    const settings = prizesSettings.map((prize) => {\n      return {\n        ...prize,\n        chance: formData[prize.key + \"-chance\"] || 0.2,\n        spinBefore: formData[prize.key + \"-spin-before\"] || 0,\n        count: formData[prize.key + \"-count\"] || 0,\n      };\n    });\n    setSettings(settings);\n    setIsShowDrawer(true);\n  };\n\n  const onSave = () => {\n    const formData = form.getFieldsValue();\n    const settings = prizesSettings.map((prize) => {\n      return {\n        ...prize,\n        chance: formData[prize.key + \"-chance\"] || 0.2,\n        spinBefore: formData[prize.key + \"-spin-before\"] || 0,\n        count: formData[prize.key + \"-count\"] || 0,\n      };\n    });\n    setSettings(settings);\n    saveSettings(settings);\n    message.success(\"Конфигурацию сохранена\");\n  };\n\n  const resetConfig = () => {\n    setSettings(defaultSettings);\n    saveSettings(defaultSettings);\n    const newForm = defaultSettings.reduce((acc, prize) => {\n      return Object.assign({}, acc, {\n        [prize.key + \"-chance\"]: prize.chance,\n        [prize.key + \"-spin-before\"]: prize.spinBefore,\n        [prize.key + \"-count\"]: prize.count,\n      });\n    }, {});\n    form.setFieldsValue(newForm);\n    message.success(\"Конфигурация сброшена\");\n  };\n\n  const resetStat = () => {\n    const stat = getInitialData(settings);\n    saveSpinData(stat);\n    setStat(stat);\n    message.success(\"Статистика сброшена\");\n  };\n\n  const onLoggedIn = () => {\n    const password = loginForm.getFieldValue(\"password\");\n    if (password === \"superPassword\") {\n      loginForm.resetFields();\n      setIsLoggedIn(true);\n    } else {\n      message.error(\"Неправильный пароль\");\n    }\n  };\n\n  const onClose = () => {\n    setIsLoggedIn(false);\n    props.onClose();\n  };\n\n  const resetMenu = () => (\n    <Menu>\n      <Menu.Item onClick={resetStat}>Сбросить ститистику</Menu.Item>\n      <Menu.Item onClick={resetConfig}>Сбросить конфигурацию</Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <Drawer\n      {...props}\n      onClose={onClose}\n      height=\"100%\"\n      title=\"Панель управления\"\n      bodyStyle={{ paddingTop: \"0px\" }}\n      placement=\"bottom\"\n      footer={\n        isLoggedIn && (\n          <div\n            style={{\n              textAlign: \"right\",\n            }}\n          >\n            <Dropdown overlay={resetMenu}>\n              <Button danger style={{ float: \"left\" }}>\n                Сбросить\n              </Button>\n            </Dropdown>\n            <Button onClick={onTest} style={{ marginRight: 8 }}>\n              Симулировать\n            </Button>\n            <Button onClick={onSave} type=\"primary\">\n              Сохранить\n            </Button>\n          </div>\n        )\n      }\n    >\n      {isLoggedIn ? (\n        <Tabs>\n          <Tabs.TabPane tab=\"Настройки\" key=\"settings\">\n            <PrizesForms settings={settings} form={form} />\n            <Similator\n              visible={isShowDrawer}\n              settings={settings}\n              onClose={hideDrawer}\n            />\n          </Tabs.TabPane>\n          <Tabs.TabPane tab=\"Статистика\" key=\"stat\">\n            <h1>Количество прокручиваний: {stat.count}</h1>\n            <StatTable settings={settings} stat={stat} />\n          </Tabs.TabPane>\n        </Tabs>\n      ) : (\n        <Form layout=\"vertical\" form={loginForm}>\n          <Row style={{ marginTop: \"20px\" }} gutter={24}>\n            <Col span={24}>\n              <Form.Item label=\"Пароль\" name=\"password\">\n                <Input type=\"password\" />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={24}>\n            <Col span={24}>\n              <Button block onClick={onLoggedIn} type=\"primary\">\n                Войти\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      )}\n    </Drawer>\n  );\n};\n\nexport default ControlDrawer;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"./fonts/fonts.css\";\nimport { getPrize, getSettings, getSpinData } from \"./helper\";\nimport PrizeBanner from \"./components/PrizeBanner\";\nimport ControlBar from \"./components/ControlBar\";\nimport Wheel from \"./components/Wheel\";\nimport ControlDrawer from \"./components/ControlDrawer\";\nimport { version } from \"../package.json\";\nimport styled from \"styled-components\";\n\nconst VersionWrapper = styled.div`\n  position: fixed;\n  top: 10px;\n  right: 10px;\n  color: red;\n`;\n\nconst spinSettings = {\n  time: 7,\n  count: 5,\n};\n\nconst prizes = [\n  { image: \"/prizes/lays.png\", text: \"Чипсы\", key: \"lays\" },\n  { image: \"/prizes/beer.png\", text: \"0,5л. Пива\", key: \"beer-05\" },\n  { image: \"/prizes/beer10.png\", text: \"10л. Пива\", key: \"beer-10\" }, // This image is different.\n  { image: \"/prizes/beer.png\", text: \"0,5л. Пива\", key: \"beer-05\" },\n  { image: \"/prizes/lays.png\", text: \"Чипсы\", key: \"lays\" },\n  { image: \"/prizes/beer.png\", text: \"0,5л. Пива\", key: \"beer-05\" },\n  { image: \"/prizes/iphone.png\", text: \"iPhone 12\", key: \"iphone\" },\n  { image: \"/prizes/beer.png\", text: \"0,5л. Пива\", key: \"beer-05\" },\n];\n\nconst calcPrize = () => {\n  const settings = getSettings();\n  const spinData = getSpinData();\n  const prize = getPrize(settings, spinData);\n\n  const prizesIds = prize\n    ? prizes.reduce((acc, { key }, idx) => {\n        if (key === prize.key) {\n          acc.push(idx);\n        }\n        return acc;\n      }, [])\n    : 0;\n\n  const randomIdx = Math.floor(Math.random() * prizesIds.length);\n\n  return prizesIds[randomIdx];\n};\n\nconst initialClickCount = {\n  settings: 0,\n  version: 0,\n};\n\nconst playWinMusic = (key) => {\n  let winMusic;\n  switch (key) {\n    case \"iphone\":\n      winMusic = new Audio(\"win-iphone.mp3\");\n      break;\n    case \"beer-10\":\n      winMusic = new Audio(\"win-beer-10.mp3\");\n      break;\n    default:\n      winMusic = new Audio(\"win.mp3\");\n  }\n\n  winMusic.play();\n};\n\nfunction App() {\n  const [spinned, setSpinned] = useState(false);\n  const [prize, setPrize] = useState(null);\n  const [isShowSetting, setIsShowSetting] = useState(false);\n  const [isShowVersion, setIsShowVersion] = useState(false);\n  const [clickCount, setClickCount] = useState(\n    Object.assign({}, initialClickCount)\n  );\n\n  const showPrize = (prize) => {\n    setPrize(prize);\n    if (prize) playWinMusic(prize.key);\n  };\n\n  const onClick = (e) => {\n    if (e.target.id === \"canvas\") {\n      setClickCount(\n        Object.assign(clickCount, {\n          version: clickCount.version + 1,\n          settings: clickCount.settings + 1,\n        })\n      );\n    } else {\n      setClickCount(Object.assign({}, initialClickCount));\n    }\n\n    if (clickCount.settings >= 10) {\n      showSettings();\n      setClickCount(Object.assign(clickCount, { settings: 0 }));\n    } else if (clickCount.version >= 5) {\n      setIsShowVersion(true);\n      setClickCount(Object.assign(clickCount, { version: 0 }));\n      setTimeout(() => setIsShowVersion(false), 3000);\n    }\n  };\n  const hideSettings = () => setIsShowSetting(false);\n  const showSettings = () => setIsShowSetting(true);\n\n  const hidePize = () => setPrize(null);\n\n  const onStart = () => {\n    var clickMusic = new Audio(\"start.mp3\");\n    clickMusic.play();\n    setSpinned(true);\n    const winIdx = calcPrize();\n    let stopAt = window.theWheel.getRandomForSegment(winIdx + 1);\n    document.getElementById(\"video\").play();\n\n    // Important thing is to set the stopAngle of the animation before stating the spin.\n    window.theWheel.animation.stopAngle = stopAt;\n    var spinMusic = new Audio(\"spin.mp3\");\n    spinMusic.play();\n    window.theWheel.startAnimation();\n    setTimeout(() => {\n      window.theWheel.rotationAngle = window.theWheel.rotationAngle % 360;\n      window.theWheel.stopAnimation();\n      setSpinned(false);\n      showPrize(prizes[winIdx]);\n    }, spinSettings.time * 1000);\n  };\n\n  return (\n    <div className=\"App\" onClick={onClick}>\n      {isShowVersion && <VersionWrapper>v{version}</VersionWrapper>}\n      <Wheel segments={prizes} spinSettings={spinSettings} />\n      <ControlBar spinned={spinned} onClick={() => !spinned && onStart()} />\n      <PrizeBanner\n        onClick={hidePize}\n        prize={prize}\n        style={{ display: prize ? \"block\" : \"none\" }}\n      />\n      {isShowSetting && <ControlDrawer visible onClose={hideSettings} />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}