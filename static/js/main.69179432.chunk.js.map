{"version":3,"sources":["helper.js","components/PrizeBanner.js","components/StartButton.js","components/ControlBar.js","components/Wheel.js","components/StatTable.js","components/Simulator.js","components/ControlDrawer.js","App.js","reportWebVitals.js","index.js"],"names":["defaultSettings","title","key","chance","spinBefore","count","saveSettings","settings","localStorage","setItem","JSON","stringify","getSettings","getItem","parse","getSpinData","spinData","getInitialData","saveSpinData","prizes","reduce","obj","prize","wins","getPrize","saveData","filter","totalChance","sum","r","Math","random","find","undefined","push","VideoWrapper","styled","div","Prize","Header","h1","Title","p","PrizeBanner","props","onClick","width","height","preload","autoPlay","loop","src","type","alt","text","image","ButtonBorder","Button","button","active","StartButton","children","BottomWrapper","GoldLine","GreyLine","HrWrapper","Triangle","ActionsWrapper","ControlBar","spinned","id","Canvas","canvas","Wheel","segments","spinSettings","document","addEventListener","window","theWheel","Winwheel","numSegments","innerRadius","drawMode","wheelImage","pointerAngle","animation","duration","time","easing","spins","loadedImg","Image","onload","draw","columns","dataIndex","StatTable","stat","data","map","percent","left","pagination","hideOnSinglePage","dataSource","expandable","expandedRowRender","record","style","margin","join","rowExpandable","name","Simulator","rest","useState","setCount","setStat","placement","gutter","span","layout","Item","label","value","onChange","step","min","Array","fill","forEach","idx","block","prizesSettings","initialValues","acc","Object","assign","PrizesForms","marginBottom","ControlDrawer","setSettings","isShowDrawer","setIsShowDrawer","Form","useForm","form","loginForm","isLoggedIn","setIsLoggedIn","resetConfig","newForm","setFieldsValue","message","success","resetStat","onClose","bodyStyle","paddingTop","footer","textAlign","overlay","danger","float","formData","getFieldsValue","marginRight","TabPane","tab","visible","marginTop","getFieldValue","resetFields","error","App","setSpinned","setPrize","isShowSetting","setIsShowSetting","clickCount","setClickCount","showPrize","winMusic","Audio","play","playWinMusic","showSettings","onStart","winIdx","prizesIds","floor","length","calcPrize","stopAt","getRandomForSegment","stopAngle","startAnimation","setTimeout","rotationAngle","stopAnimation","className","e","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"kPAAaA,G,cAAkB,CAC7B,CACEC,MAAO,sCACPC,IAAK,UACLC,OAAQ,GACRC,WAAY,EACZC,OAAQ,GAEV,CACEJ,MAAO,oCACPC,IAAK,SACLC,OAAQ,MACRC,WAAY,EACZC,OAAQ,GAEV,CAAEJ,MAAO,iCAASC,IAAK,OAAQC,OAAQ,MAAQC,WAAY,EAAGC,OAAQ,GACtE,CACEJ,MAAO,qCACPC,IAAK,UACLC,OAAQ,MACRC,WAAY,EACZC,OAAQ,GAEV,CACEJ,MAAO,SACPC,IAAK,SACLC,OAAQ,KACRC,WAAY,IACZC,MAAO,KAIEC,EAAe,SAACC,GAC3B,OAAOC,aAAaC,QAAQ,WAAYC,KAAKC,UAAUJ,KAG5CK,EAAc,WACzB,IAAML,EAAWC,aAAaK,QAAQ,YACtC,OAAKN,EAKEG,KAAKI,MAAMP,IAJhBC,aAAaC,QAAQ,WAAYC,KAAKC,UAAUX,IACzCA,IAMEe,EAAc,WACzB,IAAIC,EAAWR,aAAaK,QAAQ,YACpC,IAAKG,EAAU,CACb,IAAMT,EAAWK,IAGjB,OAFAI,EAAWC,EAAeV,GAC1BC,aAAaC,QAAQ,WAAYC,KAAKC,UAAUK,IACzCA,EAGT,OAAON,KAAKI,MAAME,IAGPE,EAAe,SAACF,GAC3B,OAAOR,aAAaC,QAAQ,WAAYC,KAAKC,UAAUK,KAG5CC,EAAiB,SAACV,GAC7B,MAAO,CACLF,MAAO,EACPc,OAAQZ,EAASa,QAAO,SAACC,EAAKC,GAK5B,OAJAD,EAAIC,EAAMpB,KAAO,CACfG,MAAO,EACPkB,KAAM,IAEDF,IACN,MAIMG,EAAW,SAACjB,EAAUS,GAA+B,IAArBS,IAAoB,yDACzDN,EAASZ,EAASmB,QACtB,SAACJ,GAAD,QACoB,IAAjBA,EAAMjB,OACLiB,EAAMjB,MAAQW,EAASG,OAAOG,EAAMpB,KAAtB,QAChBoB,EAAMlB,YAAcY,EAASX,SAG3BsB,EAAcR,EAAOC,QAAO,SAACQ,EAAKN,GAAN,OAAgBM,EAAMN,EAAMnB,SAAQ,GAEhE0B,EAAIC,KAAKC,SAAWJ,EAEtBxB,EAAS,EACPmB,EAAQH,EAAOa,MAAK,SAACV,GAEzB,OADAnB,GAAUmB,EAAMnB,OACT0B,EAAI1B,EAASmB,OAAQW,KAG9B,OAAKX,GAILN,EAASG,OAAOG,EAAMpB,KAAtB,QACAc,EAASG,OAAOG,EAAMpB,KAAtB,KAAmCgC,KAAKlB,EAASX,MAAQ,GACzDW,EAASX,QAELoB,GACFP,EAAaF,GAGRM,GAXE,M,qpCC5FX,IAAMa,EAAeC,IAAOC,IAAV,KA6BZC,EAAQF,IAAOC,IAAV,KAgBLE,EAASH,IAAOI,GAAV,KAGNC,EAAQL,IAAOM,EAAV,KAiCIC,EA1BK,SAACC,GAAW,IACtBtB,EAAmBsB,EAAnBtB,MAAOuB,EAAYD,EAAZC,QAEf,OACE,gCACE,cAACV,EAAD,UACE,uBACEW,MAAM,OACNC,OAAO,OACPC,QAAQ,OACRC,SAAS,WACTC,KAAK,OALP,SAQE,wBAAQC,IAAI,WAAWC,KAAK,kBAGhC,eAACd,EAAD,CAAOO,QAASA,EAAhB,UACE,qBAAKQ,IAAK/B,EAAMgC,KAAMH,IAAK7B,EAAMiC,QACjC,cAAChB,EAAD,6EACA,cAACE,EAAD,UAAQnB,EAAMgC,c,q+BC3EtB,IAAME,EAAepB,IAAOC,IAAV,KAcZoB,EAASrB,IAAOsB,OAAV,KAkBI,SAACd,GAAD,OACZA,EAAMe,OACF,6HACA,6IAoBOC,EARK,SAAChB,GACnB,OACE,cAACY,EAAD,CAAcX,QAASD,EAAMC,QAA7B,SACE,cAACY,EAAD,CAAQE,OAAQf,EAAMe,OAAtB,SAA+Bf,EAAMiB,c,u6CCjD3C,IAAMC,EAAgB1B,IAAOC,IAAV,KASb0B,EAAW3B,IAAOC,IAAV,KAaR2B,EAAW5B,IAAOC,IAAV,KAaR4B,EAAY7B,IAAOC,IAAV,KAOT6B,EAAW9B,IAAOC,IAAV,KAWR8B,EAAiB/B,IAAOC,IAAV,KA2BL+B,EApBI,SAACxB,GAAW,IACrBC,EAAqBD,EAArBC,QAASwB,EAAYzB,EAAZyB,QAEjB,OACE,eAACP,EAAD,WACE,cAACI,EAAD,CAAUI,GAAG,aACb,eAACL,EAAD,WACE,cAACF,EAAD,IACA,cAACC,EAAD,IACA,cAACD,EAAD,OAEF,cAACI,EAAD,UACE,cAAC,EAAD,CAAaR,OAAQU,EAASxB,QAASA,EAAvC,yB,kMCzER,IAAM0B,EAASnC,IAAOoC,OAAV,KAqDGC,EA5CD,SAAC7B,GAAW,IAChB8B,EAA2B9B,EAA3B8B,SAAUC,EAAiB/B,EAAjB+B,aAoClB,OAlCAC,SAASC,iBAAiB,oBAAoB,WAC5CC,OAAOC,SAAW,IAAID,OAAOE,SAAS,CACpCC,YAAa,EACbC,YAAa,GACbC,SAAU,QACVC,WAAY,YAEZV,SAAUA,EACVW,aAAc,IAMdC,UAAW,CACTlC,KAAM,aACNmC,SAAUZ,EAAaa,KACvBC,OAAQ,mBACRC,MAAOf,EAAatE,SAIxB,IAAIsF,EAAY,IAAIC,MAGpBD,EAAUE,OAAS,WACjBf,OAAOC,SAASK,WAAaO,EAC7Bb,OAAOC,SAASe,QAIlBH,EAAUxC,IAAM,eAIhB,eAACoB,EAAD,CAAQD,GAAG,SAASxB,MAAM,MAAMC,OAAO,MAAvC,uDAC6C,Q,mJChD3CgD,GAAU,CACd,CAAE9F,MAAO,2BAAQ+F,UAAW,QAAS9F,IAAK,SAC1C,CAAED,MAAO,uCAAU+F,UAAW,QAAS9F,IAAK,SAC5C,CAAED,MAAO,oGAAqB+F,UAAW,UAAW9F,IAAK,WACzD,CAAED,MAAO,8CAAY+F,UAAW,OAAQ9F,IAAK,SAmChC+F,GAhCG,SAACrD,GAAW,IACpBsD,EAAmBtD,EAAnBsD,KAAM3F,EAAaqC,EAAbrC,SAER4F,EAAOD,EACT3F,EAAS6F,KAAI,SAAC9E,GACZ,IAAMjB,EAAQ6F,EAAK/E,OAAOG,EAAMpB,KAAKG,MACrC,MAAO,CACLH,IAAKoB,EAAMpB,IACXD,MAAOqB,EAAMrB,MACbI,MAAOA,EACPgG,QAAkB,IAARhG,EAAe6F,EAAK7F,MAC9BiG,MAAuB,IAAjBhF,EAAMjB,MAAe,IAAMiB,EAAMjB,MAAQA,EAC/CkB,KAAM2E,EAAK/E,OAAOG,EAAMpB,KAAKqB,SAGjC,GAEJ,OACE,cAAC,KAAD,CACEgF,WAAY,CAAEC,kBAAkB,GAChCC,WAAYN,EACZJ,QAASA,GACTW,WAAY,CACVC,kBAAmB,SAACC,GAAD,OACjB,mBAAGC,MAAO,CAAEC,OAAQ,GAApB,SAA0BF,EAAOrF,KAAKwF,KAAK,QAE7CC,cAAe,SAACJ,GAAD,MAA4B,mBAAhBA,EAAOK,UCiB3BC,GA/CG,SAACtE,GAAW,IACpBrC,EAAsBqC,EAAtBrC,SAAa4G,EADM,aACGvE,EADH,gBAGDwE,mBAAS,KAHR,mBAGpB/G,EAHoB,KAGbgH,EAHa,OAIHD,mBAAS,MAJN,mBAIpBlB,EAJoB,KAIdoB,EAJc,KAc3B,OACE,eAAC,KAAD,yBAAQC,UAAU,SAASxE,OAAO,OAAO9C,MAAM,0DAAgBkH,GAA/D,cACE,cAAC,IAAD,CAAKK,OAAQ,GAAb,SACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,cAAC,IAAD,CAAMC,OAAO,WAAb,SACE,cAAC,IAAKC,KAAN,CAAWC,MAAM,iHAAjB,SACE,cAAC,IAAD,CACEf,MAAO,CAAE/D,MAAO,QAChB+E,MAAOxH,EACPyH,SAAUT,EACVU,KAAM,IACNC,IAAK,YAMf,cAAC,IAAD,CAAKR,OAAQ,GAAb,SACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,cAAC,KAAD,CAAQ5E,QA3BQ,WACtB,IAAMqD,EAAOjF,EAAeV,GAC5B,IAAI0H,MAAM5H,GAAO6H,KAAK,GAAGC,SAAQ,SAACN,EAAOO,GACvC5G,EAASjB,EAAU2F,GAAM,MAE3BoB,EAAQpB,IAsBgCmC,OAAK,EAAvC,0FAKJ,cAAC,IAAD,CAAKb,OAAQ,GAAb,SACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,cAAC,GAAD,CAAWvB,KAAMA,EAAM3F,SAAUA,aClBrC+H,GAAiB1H,IAEjB2H,GAAgBD,GAAelH,QAAO,SAACoH,EAAKlH,GAAW,IAAD,EAC1D,OAAOmH,OAAOC,OAAO,GAAIF,GAAlB,KAAAC,OAAA,IAAAA,CAAA,EACJnH,EAAMpB,IAAM,UAAYoB,EAAMnB,QAD1BsI,OAAA,IAAAA,CAAA,EAEJnH,EAAMpB,IAAM,eAAiBoB,EAAMlB,YAF/BqI,OAAA,IAAAA,CAAA,EAGJnH,EAAMpB,IAAM,SAAWoB,EAAMjB,OAHzB,MAKN,IAEGsI,GAAc,SAAC/F,GACnB,OACE,cAAC,IAAD,yBAAM8E,OAAO,WAAWa,cAAeA,IAAmB3F,GAA1D,aACG0F,GAAelC,KAAI,SAAC9E,GAAD,OAClB,cAAC,IAAD,CAEEuF,MAAO,CAAE+B,aAAc,QACvBxF,KAAK,QACLnD,MAAOqB,EAAMrB,MAJf,SAME,eAAC,IAAD,CAAKuH,OAAQ,GAAb,UACE,cAAC,IAAD,CAAKC,KAAM,EAAX,SACE,cAAC,IAAKE,KAAN,CAAWC,MAAM,mFAAkBX,KAAM3F,EAAMpB,IAAM,UAArD,SACE,cAAC,IAAD,CAAa6H,KAAM,KAAOC,IAAK,QAGnC,cAAC,IAAD,CAAKP,KAAM,EAAX,SACE,cAAC,IAAKE,KAAN,CACEC,MAAM,+EACNX,KAAM3F,EAAMpB,IAAM,eAFpB,SAIE,cAAC,IAAD,CAAa6H,KAAM,IAAKC,IAAK,QAGjC,cAAC,IAAD,CAAKP,KAAM,EAAX,SACE,cAAC,IAAKE,KAAN,CAAWC,MAAM,qGAAqBX,KAAM3F,EAAMpB,IAAM,SAAxD,SACE,cAAC,IAAD,CAAa8H,KAAM,YArBpB1G,EAAMpB,YAoLN2I,GArJO,SAACjG,GAAW,IAAD,EACCwE,mBAASkB,IADV,mBACxB/H,EADwB,KACduI,EADc,OAES1B,oBAAS,GAFlB,mBAExB2B,EAFwB,KAEVC,EAFU,OAGhBC,IAAKC,UAAbC,EAHwB,sBAIXF,IAAKC,UAAlBE,EAJwB,sBAKPhC,mBAASrG,KALF,mBAKxBmF,EALwB,KAKlBoB,EALkB,OAMKF,oBAAS,GANd,mBAMxBiC,EANwB,KAMZC,EANY,KAuCzBC,EAAc,WAClBT,EAAY9I,GACZM,EAAaN,GACb,IAAMwJ,EAAUxJ,EAAgBoB,QAAO,SAACoH,EAAKlH,GAAW,IAAD,EACrD,OAAOmH,OAAOC,OAAO,GAAIF,GAAlB,KAAAC,OAAA,IAAAA,CAAA,EACJnH,EAAMpB,IAAM,UAAYoB,EAAMnB,QAD1BsI,OAAA,IAAAA,CAAA,EAEJnH,EAAMpB,IAAM,eAAiBoB,EAAMlB,YAF/BqI,OAAA,IAAAA,CAAA,EAGJnH,EAAMpB,IAAM,SAAWoB,EAAMjB,OAHzB,MAKN,IACH8I,EAAKM,eAAeD,GACpBE,KAAQC,QAAQ,8HAGZC,EAAY,WAChB,IAAM1D,EAAOjF,EAAeV,GAC5BW,EAAagF,GACboB,EAAQpB,GACRwD,KAAQC,QAAQ,kHAyBlB,OACE,cAAC,KAAD,2BACM/G,GADN,IAEEiH,QAfY,WACdP,GAAc,GACd1G,EAAMiH,WAcJ9G,OAAO,OACP9C,MAAM,oGACN6J,UAAW,CAAEC,WAAY,OACzBxC,UAAU,SACVyC,OACEX,GACE,sBACExC,MAAO,CACLoD,UAAW,SAFf,UAKE,cAAC,KAAD,CAAUC,QAtBF,kBAChB,eAAC,KAAD,WACE,cAAC,KAAKvC,KAAN,CAAW9E,QAAS+G,EAApB,2HACA,cAAC,KAAKjC,KAAN,CAAW9E,QAAS0G,EAApB,2IAmBM,SACE,cAAC,KAAD,CAAQY,QAAM,EAACtD,MAAO,CAAEuD,MAAO,QAA/B,gEAIF,cAAC,KAAD,CAAQvH,QA5FH,WACb,IAAMwH,EAAWlB,EAAKmB,iBAChB/J,EAAW+H,GAAelC,KAAI,SAAC9E,GACnC,OAAO,2BACFA,GADL,IAEEnB,OAAQkK,EAAS/I,EAAMpB,IAAM,YAAc,GAC3CE,WAAYiK,EAAS/I,EAAMpB,IAAM,iBAAmB,EACpDG,MAAOgK,EAAS/I,EAAMpB,IAAM,WAAa,OAG7C4I,EAAYvI,GACZyI,GAAgB,IAiFiBnC,MAAO,CAAE0D,YAAa,GAA/C,sFAGA,cAAC,KAAD,CAAQ1H,QAjFH,WACb,IAAMwH,EAAWlB,EAAKmB,iBAChB/J,EAAW+H,GAAelC,KAAI,SAAC9E,GACnC,OAAO,2BACFA,GADL,IAEEnB,OAAQkK,EAAS/I,EAAMpB,IAAM,YAAc,GAC3CE,WAAYiK,EAAS/I,EAAMpB,IAAM,iBAAmB,EACpDG,MAAOgK,EAAS/I,EAAMpB,IAAM,WAAa,OAG7C4I,EAAYvI,GACZD,EAAaC,GACbmJ,KAAQC,QAAQ,oIAqEiBvG,KAAK,UAA9B,uEAtBR,SA6BGiG,EACC,eAAC,KAAD,WACE,eAAC,KAAKmB,QAAN,CAAcC,IAAI,yDAAlB,UACE,cAAC,GAAD,CAAatB,KAAMA,IACnB,cAAC,GAAD,CACEuB,QAAS3B,EACTxI,SAAUA,EACVsJ,QA/GO,kBAAMb,GAAgB,QA0GC,YAQlC,eAAC,KAAKwB,QAAN,CAAcC,IAAI,+DAAlB,UACE,+KAA+BvE,EAAK7F,SACpC,cAAC,GAAD,CAAWE,SAAUA,EAAU2F,KAAMA,MAFJ,WAMrC,eAAC,IAAD,CAAMwB,OAAO,WAAWyB,KAAMC,EAA9B,UACE,cAAC,IAAD,CAAKvC,MAAO,CAAE8D,UAAW,QAAUnD,OAAQ,GAA3C,SACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,cAAC,IAAKE,KAAN,CAAWC,MAAM,uCAASX,KAAK,WAA/B,SACE,cAAC,KAAD,CAAO7D,KAAK,mBAIlB,cAAC,IAAD,CAAKoE,OAAQ,GAAb,SACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,cAAC,KAAD,CAAQY,OAAK,EAACxF,QA9EP,WAEA,kBADAuG,EAAUwB,cAAc,aAEvCxB,EAAUyB,cACVvB,GAAc,IAEdI,KAAQoB,MAAM,kHAwE6B1H,KAAK,UAAxC,uDC1MRuB,GAAe,CACnBa,KAAM,EACNnF,MAAO,GAGHc,GAAS,CACb,CAAEoC,MAAO,mBAAoBD,KAAM,sCAAcpD,IAAK,WACtD,CAAEqD,MAAO,mBAAoBD,KAAM,iCAASpD,IAAK,QACjD,CAAEqD,MAAO,qBAAsBD,KAAM,qCAAapD,IAAK,WACvD,CAAEqD,MAAO,mBAAoBD,KAAM,iCAASpD,IAAK,QACjD,CAAEqD,MAAO,mBAAoBD,KAAM,oCAAYpD,IAAK,UACpD,CAAEqD,MAAO,mBAAoBD,KAAM,iCAASpD,IAAK,QACjD,CAAEqD,MAAO,qBAAsBD,KAAM,YAAapD,IAAK,UACvD,CAAEqD,MAAO,mBAAoBD,KAAM,iCAASpD,IAAK,SAgGpC6K,OA1Df,WAAgB,IAAD,EACiB3D,oBAAS,GAD1B,mBACN/C,EADM,KACG2G,EADH,OAEa5D,mBAAS,MAFtB,mBAEN9F,EAFM,KAEC2J,EAFD,OAG6B7D,oBAAS,GAHtC,mBAGN8D,EAHM,KAGSC,EAHT,OAIuB/D,mBAAS,GAJhC,mBAINgE,EAJM,KAIMC,EAJN,KAMPC,EAAY,SAAChK,GACjB2J,EAAS3J,GACLA,GAxBa,SAACpB,GACpB,IAAIqL,EACJ,OAAQrL,GACN,IAAK,SACHqL,EAAW,IAAIC,MAAM,kBACrB,MACF,IAAK,UACHD,EAAW,IAAIC,MAAM,mBACrB,MACF,QACED,EAAW,IAAIC,MAAM,WAGzBD,EAASE,OAWIC,CAAapK,EAAMpB,MAgB1ByL,EAAe,kBAAMR,GAAiB,IAItCS,EAAU,WACG,IAAIJ,MAAM,aAChBC,OACXT,GAAW,GACX,IAAMa,EAnEQ,WAChB,IAAMtL,EAAWK,IACXI,EAAWD,IACXO,EAAQE,EAASjB,EAAUS,GAE3B8K,EAAYxK,EACdH,GAAOC,QAAO,SAACoH,EAAD,EAAeJ,GAI3B,OAJmC,EAAflI,MACRoB,EAAMpB,KAChBsI,EAAItG,KAAKkG,GAEJI,IACN,IACH,EAIJ,OAAOsD,EAFWhK,KAAKiK,MAAMjK,KAAKC,SAAW+J,EAAUE,SAqDtCC,GACXC,EAASpH,OAAOC,SAASoH,oBAAoBN,EAAS,GAG1D/G,OAAOC,SAASO,UAAU8G,UAAYF,EACtB,IAAIV,MAAM,YAChBC,OACV3G,OAAOC,SAASsH,iBAChBC,YAAW,WACTxH,OAAOC,SAASwH,cAAgBzH,OAAOC,SAASwH,cAAgB,IAChEzH,OAAOC,SAASyH,gBAChBxB,GAAW,GACXM,EAAUnK,GAAO0K,MACI,IAApBlH,GAAaa,OAGlB,OACE,sBAAKiH,UAAU,MAAM5J,QAtCP,SAAC6J,GACK,aAAhBA,EAAEC,OAAOrI,GACX+G,EAAcD,EAAa,GAE3BC,EAAc,GAGZD,GAAc,IAChBO,IACAN,EAAc,KA6BhB,UACE,cAAC,EAAD,CAAO3G,SAAUvD,GAAQwD,aAAcA,KACvC,cAAC,EAAD,CAAYN,QAASA,EAASxB,QAAS,kBAAOwB,GAAWuH,OACxDtK,GAAS,cAAC,EAAD,CAAauB,QA1BV,kBAAMoI,EAAS,OA0Bc3J,MAAOA,IACjD,cAAC,GAAD,CAAeoJ,QAASQ,EAAerB,QA9BtB,kBAAMsB,GAAiB,UCvE/ByB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OAAO,cAAC,GAAD,IAAS1I,SAAS2I,eAAe,SAKjDX,O","file":"static/js/main.69179432.chunk.js","sourcesContent":["export const defaultSettings = [\n  {\n    title: \"Пиво 0,5л.\",\n    key: \"beer-05\",\n    chance: 0.5,\n    spinBefore: 0,\n    count: -1,\n  },\n  {\n    title: \"Пиво 1л.\",\n    key: \"beer-1\",\n    chance: 0.4523,\n    spinBefore: 0,\n    count: -1,\n  },\n  { title: \"Чипсы\", key: \"lays\", chance: 0.0333, spinBefore: 0, count: -1 },\n  {\n    title: \"Пиво 10л.\",\n    key: \"beer-10\",\n    chance: 0.0142,\n    spinBefore: 0,\n    count: -1,\n  },\n  {\n    title: \"iPhone\",\n    key: \"iphone\",\n    chance: 0.0002,\n    spinBefore: 1000,\n    count: 1,\n  },\n];\n\nexport const saveSettings = (settings) => {\n  return localStorage.setItem(\"settings\", JSON.stringify(settings));\n};\n\nexport const getSettings = () => {\n  const settings = localStorage.getItem(\"settings\");\n  if (!settings) {\n    localStorage.setItem(\"settings\", JSON.stringify(defaultSettings));\n    return defaultSettings;\n  }\n\n  return JSON.parse(settings);\n};\n\nexport const getSpinData = () => {\n  let spinData = localStorage.getItem(\"spinData\");\n  if (!spinData) {\n    const settings = getSettings();\n    spinData = getInitialData(settings);\n    localStorage.setItem(\"spinData\", JSON.stringify(spinData));\n    return spinData;\n  }\n\n  return JSON.parse(spinData);\n};\n\nexport const saveSpinData = (spinData) => {\n  return localStorage.setItem(\"spinData\", JSON.stringify(spinData));\n};\n\nexport const getInitialData = (settings) => {\n  return {\n    count: 0,\n    prizes: settings.reduce((obj, prize) => {\n      obj[prize.key] = {\n        count: 0,\n        wins: [],\n      };\n      return obj;\n    }, {}),\n  };\n};\n\nexport const getPrize = (settings, spinData, saveData = true) => {\n  const prizes = settings.filter(\n    (prize) =>\n      (prize.count === -1 ||\n        prize.count > spinData.prizes[prize.key][\"count\"]) &&\n      prize.spinBefore <= spinData.count\n  );\n\n  const totalChance = prizes.reduce((sum, prize) => sum + prize.chance, 0);\n\n  const r = Math.random() * totalChance;\n\n  let chance = 0;\n  const prize = prizes.find((prize) => {\n    chance += prize.chance;\n    return r < chance ? prize : undefined;\n  });\n\n  if (!prize) {\n    return null;\n  }\n\n  spinData.prizes[prize.key][\"count\"]++;\n  spinData.prizes[prize.key][\"wins\"].push(spinData.count + 1);\n  spinData.count++;\n\n  if (saveData) {\n    saveSpinData(spinData);\n  }\n\n  return prize;\n};\n","import styled from \"styled-components\";\n\nconst VideoWrapper = styled.div`\n  opacity: 0.7;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  overflow: hidden;\n  z-index: 1;\n  /* background: url(bg/daisy-stock-poster.jpg) no-repeat #94a233; */\n  background-size: cover;\n  > video {\n    position: absolute;\n    top: 0;\n    left: 0;\n    min-width: 100%;\n    min-height: 100%;\n    width: auto;\n    height: auto;\n  }\n\n  > video {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\nconst Prize = styled.div`\n  z-index: 10;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  padding: 40px;\n  border-radius: 40px;\n  padding: 60px;\n  border: 10px solid #ffd27b;\n  background: #000000;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst Header = styled.h1`\n  color: #fff;\n`;\nconst Title = styled.p`\n  color: #ffd27b;\n  margin: 0;\n  font-size: 42px;\n  font-weight: 700;\n`;\n\nconst PrizeBanner = (props) => {\n  const { prize, onClick } = props;\n\n  return (\n    <div>\n      <VideoWrapper>\n        <video\n          width=\"100%\"\n          height=\"auto\"\n          preload=\"auto\"\n          autoPlay=\"autoplay\"\n          loop=\"loop\"\n          // poster=\"spin.png\"\n        >\n          <source src=\"back.mp4\" type=\"video/mp4\"></source>\n        </video>\n      </VideoWrapper>\n      <Prize onClick={onClick}>\n        <img alt={prize.text} src={prize.image} />\n        <Header>Вы выиграли:</Header>\n        <Title>{prize.text}</Title>\n      </Prize>\n    </div>\n  );\n};\n\nexport default PrizeBanner;\n","import styled from \"styled-components\";\n\nconst ButtonBorder = styled.div`\n  cursor: pointer;\n  display: flex;\n  user-select: none;\n  background: radial-gradient(\n    50% 50% at 50% 50%,\n    #6b6b6b 0%,\n    #dbdbdb 90.62%,\n    #7d7d7d 100%\n  );\n  width: 180px;\n  height: 180px;\n  border-radius: 50%;\n`;\nconst Button = styled.button`\n  cursor: pointer;\n  user-select: none;\n  display: flex;\n  align-items: center;\n  font-family: \"DigitalICG\";\n  text-transform: uppercase;\n  justify-content: center;\n  color: red;\n  outline: none;\n  border: none;\n  width: calc(100% - 24px);\n  height: calc(100% - 24px);\n  border-radius: 50%;\n  margin: 12px;\n  font-size: 48px;\n  display: flex;\n  position: relative;\n  background: ${(props) =>\n    props.active\n      ? \"radial-gradient( 50% 50% at 50% 50%,rgb(222 90 90 / 88%) 0%,rgb(230 0 0 / 28%) 100%),linear-gradient(0deg,#000000,#000000)\"\n      : \"radial-gradient( 50% 50% at 50% 50%, rgba(153, 153, 153, 0.5) 0%, rgba(255, 255, 255, 0) 100%), linear-gradient(0deg, #000000, #000000)\"};\n\n  :active {\n    background: radial-gradient(\n        70% 70% at 50% 50%,\n        rgba(153, 153, 153, 0.5) 0%,\n        rgba(255, 255, 255, 0) 100%\n      ),\n      linear-gradient(0deg, #000000, #000000);\n  }\n`;\n\nconst StartButton = (props) => {\n  return (\n    <ButtonBorder onClick={props.onClick}>\n      <Button active={props.active}>{props.children}</Button>\n    </ButtonBorder>\n  );\n};\n\nexport default StartButton;\n","import styled from \"styled-components\";\nimport StartButton from \"./StartButton\";\n\nconst BottomWrapper = styled.div`\n  min-height: 40vh;\n  flex-grow: 1;\n  width: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst GoldLine = styled.div`\n  width: 100%;\n  height: 12px;\n  display: block;\n  box-sizing: content-box;\n  background: linear-gradient(180deg, #b58304 0%, #ffd27b 100%);\n  :first-child {\n    border-top: 10px solid #1d1d1d;\n  }\n  :last-child {\n    border-bottom: 10px solid #1d1d1d;\n  }\n`;\nconst GreyLine = styled.div`\n  width: 100%;\n  height: 100%;\n  max-height: 100px;\n  display: block;\n  background: linear-gradient(\n    270deg,\n    #000000 0%,\n    rgba(69, 69, 69, 0.6) 25%,\n    rgba(73, 73, 73, 0.63) 75%,\n    #000000 100%\n  );\n`;\nconst HrWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  max-height: 144px;\n  flex: 1 1 0px;\n`;\nconst Triangle = styled.div`\n  /* background: green; */\n  position: absolute;\n  left: 50%;\n  bottom: 100%;\n  transform: translateX(-50%);\n  width: 104px;\n  height: 80px;\n  background: url(\"/pointer.png\") no-repeat;\n`;\n\nconst ActionsWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-grow: 1;\n`;\n\nconst ControlBar = (props) => {\n  const { onClick, spinned } = props;\n\n  return (\n    <BottomWrapper>\n      <Triangle id=\"triangle\" />\n      <HrWrapper>\n        <GoldLine />\n        <GreyLine />\n        <GoldLine />\n      </HrWrapper>\n      <ActionsWrapper>\n        <StartButton active={spinned} onClick={onClick}>\n          Start\n        </StartButton>\n      </ActionsWrapper>\n    </BottomWrapper>\n  );\n};\n\nexport default ControlBar;\n","import styled from \"styled-components\";\n\nconst Canvas = styled.canvas`\n  width: 60vh;\n  max-width: 100vw;\n  max-height: 100vw;\n  flex-shrink: 0;\n  padding: 20px;\n  box-sizing: border-box;\n`;\n\nconst Wheel = (props) => {\n  const { segments, spinSettings } = props;\n\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    window.theWheel = new window.Winwheel({\n      numSegments: 8,\n      innerRadius: 75,\n      drawMode: \"image\",\n      wheelImage: \"wheel.png\",\n      // responsive: true,\n      segments: segments,\n      pointerAngle: 180,\n      // pointerGuide: {\n      //   display: true,\n      //   strokeStyle: \"red\",\n      //   lineWidth: 3,\n      // },\n      animation: {\n        type: \"spinToStop\", // Type of animation.\n        duration: spinSettings.time, // How long the animation is to take in seconds.\n        easing: \"Power2.easeInOut\",\n        spins: spinSettings.count, // The number of complete 360 degree rotations the wheel is to do.\n      },\n    });\n\n    let loadedImg = new Image();\n\n    // Create callback to execute once the image has finished loading.\n    loadedImg.onload = function () {\n      window.theWheel.wheelImage = loadedImg; // Make wheelImage equal the loaded image object.\n      window.theWheel.draw(); // Also call draw function to render the wheel.\n    };\n\n    // Set the image source, once complete this will trigger the onLoad callback (above).\n    loadedImg.src = \"wheel.png\";\n  });\n\n  return (\n    <Canvas id=\"canvas\" width=\"612\" height=\"612\">\n      Canvas not supported, use another browser.{\" \"}\n    </Canvas>\n  );\n};\n\nexport default Wheel;\n","import { Table } from \"antd\";\n\nconst columns = [\n  { title: \"Приз\", dataIndex: \"title\", key: \"title\" },\n  { title: \"Выпало\", dataIndex: \"count\", key: \"count\" },\n  { title: \"Процент выпадения\", dataIndex: \"percent\", key: \"percent\" },\n  { title: \"Осталоcь\", dataIndex: \"left\", key: \"left\" },\n];\n\nconst StatTable = (props) => {\n  const { stat, settings } = props;\n\n  const data = stat\n    ? settings.map((prize) => {\n        const count = stat.prizes[prize.key].count;\n        return {\n          key: prize.key,\n          title: prize.title,\n          count: count,\n          percent: (count * 100) / stat.count,\n          left: prize.count === -1 ? \"-\" : prize.count - count,\n          wins: stat.prizes[prize.key].wins,\n        };\n      })\n    : [];\n\n  return (\n    <Table\n      pagination={{ hideOnSinglePage: true }}\n      dataSource={data}\n      columns={columns}\n      expandable={{\n        expandedRowRender: (record) => (\n          <p style={{ margin: 0 }}>{record.wins.join(\",\")}</p>\n        ),\n        rowExpandable: (record) => record.name !== \"Not Expandable\",\n      }}\n    />\n  );\n};\n\nexport default StatTable;\n","import { Button, Col, Drawer, Form, InputNumber, Modal, Row } from \"antd\";\nimport { useState } from \"react\";\nimport { getInitialData, getPrize } from \"../helper\";\nimport StatTable from \"./StatTable\";\n\nconst Simulator = (props) => {\n  const { settings, ...rest } = props;\n\n  const [count, setCount] = useState(1000);\n  const [stat, setStat] = useState(null);\n\n  const startSimulation = () => {\n    const stat = getInitialData(settings);\n    new Array(count).fill(1).forEach((value, idx) => {\n      getPrize(settings, stat, false);\n    });\n    setStat(stat);\n  };\n\n  return (\n    <Drawer placement=\"bottom\" height=\"100%\" title=\"Симуляция\" {...rest}>\n      <Row gutter={24}>\n        <Col span={24}>\n          <Form layout=\"vertical\">\n            <Form.Item label=\"Количество вращений:\">\n              <InputNumber\n                style={{ width: \"100%\" }}\n                value={count}\n                onChange={setCount}\n                step={1000}\n                min={1}\n              />\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n      <Row gutter={24}>\n        <Col span={24}>\n          <Button onClick={startSimulation} block>\n            Симулировать\n          </Button>\n        </Col>\n      </Row>\n      <Row gutter={24}>\n        <Col span={24}>\n          <StatTable stat={stat} settings={settings} />\n        </Col>\n      </Row>\n    </Drawer>\n  );\n};\n\nexport default Simulator;\n","import React, { useState } from \"react\";\n\nimport {\n  Drawer,\n  Tabs,\n  Row,\n  Form,\n  Col,\n  Card,\n  InputNumber,\n  Button,\n  Menu,\n  Dropdown,\n  message,\n  Input,\n} from \"antd\";\nimport Similator from \"./Simulator\";\nimport {\n  getSettings,\n  getSpinData,\n  saveSettings,\n  defaultSettings,\n  getInitialData,\n  saveSpinData,\n} from \"../helper\";\nimport StatTable from \"./StatTable\";\n\nconst prizesSettings = getSettings();\n\nconst initialValues = prizesSettings.reduce((acc, prize) => {\n  return Object.assign({}, acc, {\n    [prize.key + \"-chance\"]: prize.chance,\n    [prize.key + \"-spin-before\"]: prize.spinBefore,\n    [prize.key + \"-count\"]: prize.count,\n  });\n}, {});\n\nconst PrizesForms = (props) => {\n  return (\n    <Form layout=\"vertical\" initialValues={initialValues} {...props}>\n      {prizesSettings.map((prize) => (\n        <Card\n          key={prize.key}\n          style={{ marginBottom: \"20px\" }}\n          type=\"inner\"\n          title={prize.title}\n        >\n          <Row gutter={12}>\n            <Col span={8}>\n              <Form.Item label=\"Доля выпадения:\" name={prize.key + \"-chance\"}>\n                <InputNumber step={0.001} min={0} />\n              </Form.Item>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                label=\"После X попыток:\"\n                name={prize.key + \"-spin-before\"}\n              >\n                <InputNumber step={100} min={0} />\n              </Form.Item>\n            </Col>\n            <Col span={8}>\n              <Form.Item label=\"Количество призов:\" name={prize.key + \"-count\"}>\n                <InputNumber min={-1} />\n              </Form.Item>\n            </Col>\n          </Row>\n        </Card>\n      ))}\n    </Form>\n  );\n};\n\nconst ControlDrawer = (props) => {\n  const [settings, setSettings] = useState(prizesSettings);\n  const [isShowDrawer, setIsShowDrawer] = useState(false);\n  const [form] = Form.useForm();\n  const [loginForm] = Form.useForm();\n  const [stat, setStat] = useState(getSpinData());\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const hideDrawer = () => setIsShowDrawer(false);\n\n  const onTest = () => {\n    const formData = form.getFieldsValue();\n    const settings = prizesSettings.map((prize) => {\n      return {\n        ...prize,\n        chance: formData[prize.key + \"-chance\"] || 0.2,\n        spinBefore: formData[prize.key + \"-spin-before\"] || 0,\n        count: formData[prize.key + \"-count\"] || 0,\n      };\n    });\n    setSettings(settings);\n    setIsShowDrawer(true);\n  };\n\n  const onSave = () => {\n    const formData = form.getFieldsValue();\n    const settings = prizesSettings.map((prize) => {\n      return {\n        ...prize,\n        chance: formData[prize.key + \"-chance\"] || 0.2,\n        spinBefore: formData[prize.key + \"-spin-before\"] || 0,\n        count: formData[prize.key + \"-count\"] || 0,\n      };\n    });\n    setSettings(settings);\n    saveSettings(settings);\n    message.success(\"Конфигурацию сохранена\");\n  };\n\n  const resetConfig = () => {\n    setSettings(defaultSettings);\n    saveSettings(defaultSettings);\n    const newForm = defaultSettings.reduce((acc, prize) => {\n      return Object.assign({}, acc, {\n        [prize.key + \"-chance\"]: prize.chance,\n        [prize.key + \"-spin-before\"]: prize.spinBefore,\n        [prize.key + \"-count\"]: prize.count,\n      });\n    }, {});\n    form.setFieldsValue(newForm);\n    message.success(\"Конфигурация сброшена\");\n  };\n\n  const resetStat = () => {\n    const stat = getInitialData(settings);\n    saveSpinData(stat);\n    setStat(stat);\n    message.success(\"Статистика сброшена\");\n  };\n\n  const onLoggedIn = () => {\n    const password = loginForm.getFieldValue(\"password\");\n    if (password === \"superPassword\") {\n      loginForm.resetFields();\n      setIsLoggedIn(true);\n    } else {\n      message.error(\"Неправильный пароль\");\n    }\n  };\n\n  const onClose = () => {\n    setIsLoggedIn(false);\n    props.onClose();\n  };\n\n  const resetMenu = () => (\n    <Menu>\n      <Menu.Item onClick={resetStat}>Сбросить ститистику</Menu.Item>\n      <Menu.Item onClick={resetConfig}>Сбросить конфигурацию</Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <Drawer\n      {...props}\n      onClose={onClose}\n      height=\"100%\"\n      title=\"Панель управления\"\n      bodyStyle={{ paddingTop: \"0px\" }}\n      placement=\"bottom\"\n      footer={\n        isLoggedIn && (\n          <div\n            style={{\n              textAlign: \"right\",\n            }}\n          >\n            <Dropdown overlay={resetMenu}>\n              <Button danger style={{ float: \"left\" }}>\n                Сбросить\n              </Button>\n            </Dropdown>\n            <Button onClick={onTest} style={{ marginRight: 8 }}>\n              Симулировать\n            </Button>\n            <Button onClick={onSave} type=\"primary\">\n              Сохранить\n            </Button>\n          </div>\n        )\n      }\n    >\n      {isLoggedIn ? (\n        <Tabs>\n          <Tabs.TabPane tab=\"Настройки\" key=\"settings\">\n            <PrizesForms form={form} />\n            <Similator\n              visible={isShowDrawer}\n              settings={settings}\n              onClose={hideDrawer}\n            />\n          </Tabs.TabPane>\n          <Tabs.TabPane tab=\"Статистика\" key=\"stat\">\n            <h1>Количество прокручиваний: {stat.count}</h1>\n            <StatTable settings={settings} stat={stat} />\n          </Tabs.TabPane>\n        </Tabs>\n      ) : (\n        <Form layout=\"vertical\" form={loginForm}>\n          <Row style={{ marginTop: \"20px\" }} gutter={24}>\n            <Col span={24}>\n              <Form.Item label=\"Пароль\" name=\"password\">\n                <Input type=\"password\" />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={24}>\n            <Col span={24}>\n              <Button block onClick={onLoggedIn} type=\"primary\">\n                Войти\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      )}\n    </Drawer>\n  );\n};\n\nexport default ControlDrawer;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"./fonts/fonts.css\";\nimport { getPrize, getSettings, getSpinData } from \"./helper\";\nimport PrizeBanner from \"./components/PrizeBanner\";\nimport ControlBar from \"./components/ControlBar\";\nimport Wheel from \"./components/Wheel\";\nimport ControlDrawer from \"./components/ControlDrawer\";\n\nconst spinSettings = {\n  time: 7,\n  count: 5,\n};\n\nconst prizes = [\n  { image: \"/prizes/beer.png\", text: \"0,5л. Пива\", key: \"beer-05\" },\n  { image: \"/prizes/lays.png\", text: \"Чипсы\", key: \"lays\" },\n  { image: \"/prizes/beer10.png\", text: \"10л. Пива\", key: \"beer-10\" }, // This image is different.\n  { image: \"/prizes/lays.png\", text: \"Чипсы\", key: \"lays\" },\n  { image: \"/prizes/beer.png\", text: \"1л. Пива\", key: \"beer-1\" },\n  { image: \"/prizes/lays.png\", text: \"Чипсы\", key: \"lays\" },\n  { image: \"/prizes/iphone.png\", text: \"iPhone 11\", key: \"iphone\" },\n  { image: \"/prizes/lays.png\", text: \"Чипсы\", key: \"lays\" },\n];\n\nconst calcPrize = () => {\n  const settings = getSettings();\n  const spinData = getSpinData();\n  const prize = getPrize(settings, spinData);\n\n  const prizesIds = prize\n    ? prizes.reduce((acc, { key }, idx) => {\n        if (key === prize.key) {\n          acc.push(idx);\n        }\n        return acc;\n      }, [])\n    : 0;\n\n  const randomIdx = Math.floor(Math.random() * prizesIds.length);\n\n  return prizesIds[randomIdx];\n};\n\nconst playWinMusic = (key) => {\n  let winMusic;\n  switch (key) {\n    case \"iphone\":\n      winMusic = new Audio(\"win-iphone.mp3\");\n      break;\n    case \"beer-10\":\n      winMusic = new Audio(\"win-beer-10.mp3\");\n      break;\n    default:\n      winMusic = new Audio(\"win.mp3\");\n  }\n\n  winMusic.play();\n};\n\nfunction App() {\n  const [spinned, setSpinned] = useState(false);\n  const [prize, setPrize] = useState(null);\n  const [isShowSetting, setIsShowSetting] = useState(false);\n  const [clickCount, setClickCount] = useState(0);\n\n  const showPrize = (prize) => {\n    setPrize(prize);\n    if (prize) playWinMusic(prize.key);\n  };\n\n  const onClick = (e) => {\n    if (e.target.id === \"triangle\") {\n      setClickCount(clickCount + 1);\n    } else {\n      setClickCount(0);\n    }\n\n    if (clickCount >= 5) {\n      showSettings();\n      setClickCount(0);\n    }\n  };\n  const hideSettings = () => setIsShowSetting(false);\n  const showSettings = () => setIsShowSetting(true);\n\n  const hidePize = () => setPrize(null);\n\n  const onStart = () => {\n    var clickMusic = new Audio(\"start.mp3\");\n    clickMusic.play();\n    setSpinned(true);\n    const winIdx = calcPrize();\n    let stopAt = window.theWheel.getRandomForSegment(winIdx + 1);\n\n    // Important thing is to set the stopAngle of the animation before stating the spin.\n    window.theWheel.animation.stopAngle = stopAt;\n    var spinMusic = new Audio(\"spin.mp3\");\n    spinMusic.play();\n    window.theWheel.startAnimation();\n    setTimeout(() => {\n      window.theWheel.rotationAngle = window.theWheel.rotationAngle % 360;\n      window.theWheel.stopAnimation();\n      setSpinned(false);\n      showPrize(prizes[winIdx]);\n    }, spinSettings.time * 1000);\n  };\n\n  return (\n    <div className=\"App\" onClick={onClick}>\n      <Wheel segments={prizes} spinSettings={spinSettings} />\n      <ControlBar spinned={spinned} onClick={() => !spinned && onStart()} />\n      {prize && <PrizeBanner onClick={hidePize} prize={prize} />}\n      <ControlDrawer visible={isShowSetting} onClose={hideSettings} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}